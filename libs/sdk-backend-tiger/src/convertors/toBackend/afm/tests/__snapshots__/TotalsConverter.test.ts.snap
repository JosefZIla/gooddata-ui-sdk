// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`convertTotals should correctly convert attributes in first dim and measure group in second dim 1`] = `
Array [
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
    },
    "localIdentifier": "total_0_sum",
  },
]
`;

exports[`convertTotals should correctly convert measure group and attribute in one dimension 1`] = `
Array [
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_0": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
    },
    "localIdentifier": "total_1_sum",
  },
]
`;

exports[`convertTotals should correctly convert multiple totals with various functions 1`] = `
Array [
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
            "m2",
          ],
        },
      },
    },
    "localIdentifier": "total_0_sum",
  },
  Object {
    "function": "MIN",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
    },
    "localIdentifier": "total_0_min",
  },
  Object {
    "function": "MAX",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m2",
          ],
        },
      },
    },
    "localIdentifier": "total_0_max",
  },
]
`;

exports[`convertTotals should correctly convert no totals 1`] = `Array []`;

exports[`convertTotals should correctly convert three dimensions 1`] = `
Array [
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
      "dim_2": null,
    },
    "localIdentifier": "total_0_sum",
  },
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_0": null,
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
    },
    "localIdentifier": "total_2_sum",
  },
]
`;

exports[`convertTotals should correctly convert three totals with the same function 1`] = `
Array [
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
            "m2",
            "m3",
          ],
        },
      },
    },
    "localIdentifier": "total_0_sum",
  },
]
`;

exports[`convertTotals should correctly convert two totals with different functions 1`] = `
Array [
  Object {
    "function": "SUM",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
    },
    "localIdentifier": "total_0_sum",
  },
  Object {
    "function": "MIN",
    "includedDimensions": Object {
      "dim_1": Object {
        "dimensionAttributesValues": Object {
          "measureGroup": Array [
            "m1",
          ],
        },
      },
    },
    "localIdentifier": "total_0_min",
  },
]
`;

exports[`convertTotals should fail on converting native total 1`] = `"Tiger backend does not support native totals."`;

exports[`convertTotals should fail on converting subtotal 1`] = `"Tiger backend does not support subtotals."`;

exports[`convertTotals should fail on converting total on dimension with measure group 1`] = `"Grand total must be defined opposite to some dimension containing \\"measure group\\"."`;

exports[`convertTotals should fail on converting total on single dimension result spec 1`] = `"Grand total must be defined opposite to some dimension containing \\"measure group\\"."`;

exports[`convertTotals should fail on converting total without any measure group 1`] = `"Grand total must be defined opposite to some dimension containing \\"measure group\\"."`;
